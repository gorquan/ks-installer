---

- name: KubeSphere | Getting token
  shell: >
    {{ bin_dir }}/kubectl get secret kubesphere-secret -o jsonpath='{.data.token}' | base64 -d
  register: ks_token_str

- name: KubeSphere | Getting ks-secret
  shell: >
    {{ bin_dir }}/kubectl get secret kubesphere-secret -o jsonpath='{.data.secret}' | base64 -d
  register: ks_secret_str

- name: KubeSphere | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/{{ item.file }}"
  with_items:
    - { name: kubesphere-config, file: kubesphere-config.yaml, type: cm }


- name: KubeSphere | Init KubeSphere
  shell: "{{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/{{ item }}"
  loop:
    - "kubesphere-config.yaml"
  register: import
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"

- import_tasks: ks-restart.yaml
