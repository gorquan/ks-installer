---

- name: ks-devops | Getting sonarqube installation files
  copy:
    src: "jenkins-update-center"
    dest: "{{ kubesphere_dir }}/"


- name: jenkins-update-center | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/jenkins-update-center/values.yaml"
  with_items:
    - { name: values-jenkins-uc, file: values-jenkins-uc.yaml, type: values }

- name: jenkins-update-center | Check jenkins-update-center
  shell: >
    {{ bin_dir }}/helm list -n kubesphere-devops-system | grep "uc"
  register: uc_check
  ignore_errors: True

- block:
    - name: jenkins-update-center | Start Jenkins plugins update center
      shell: "{{ bin_dir }}/helm upgrade --install uc {{ kubesphere_dir }}/jenkins-update-center --namespace kubesphere-devops-system"
      register: uc_result
      ignore_errors: True


    - name: jenkins-update-cente | Delete update-center
      shell: >
        {{ bin_dir }}/helm del --purge uc
      when:
        - "uc_result.stderr and 'no matches for kind' in uc_result.stderr"

    - name: jenkins-update-cente | Waiting for seconds
      wait_for: timeout=10
      when:
        - "uc_result.stderr and 'no matches for kind' in uc_result.stderr"

    - name: jenkins-update-center | Start Jenkins plugins update center
      shell: "{{ bin_dir }}/helm upgrade --install uc {{ kubesphere_dir }}/jenkins-update-center --namespace kubesphere-devops-system"
      register: uc_result
      when:
        - "uc_result.stderr and 'no matches for kind' in uc_result.stderr"

    - fail:
        msg: "{{ uc_result.stderr }}"
      when:
        - uc_result.stderr is defined
        - uc_result.stderr != ""
        - uc_result.stderr.find("no matches for kind") == -1
  when:
    - (uc_check.stdout.find("deployed") == -1) or (uc_check.stdout.find("3.0.0") == -1)

- name: jenkins-update-center | jenkins-update-center is ok
  shell: >
     {{ bin_dir }}/kubectl get pod -n kubesphere-devops-system | grep Running | grep uc-jenkins-update-center
  register: result
  until: result.stdout.find("Running") != -1
  retries: 30
  delay: 20
  ignore_errors: True


